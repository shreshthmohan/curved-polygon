self.curvedPolygon=function(n){"use strict";var o=Math.PI;function i(n){var o=n.allPoints,i=n.borderRadius,r=n.alpha;return o.length?"M ".concat(o[0].join(" ")," ").concat(o.slice(1).map((function(n,o){return o%2==0?"A ".concat(i," ").concat(i," ").concat(r," 0 0 ").concat(n.join(" ")):"L ".concat(n.join(" "))})).join(" ")," z"):""}function r(n){for(var o=n.sideCount,i=n.radiusOfInnerPolygon,r=n.borderRadius,a=n.alpha,e=n.cx,d=void 0===e?0:e,c=n.cy,u=void 0===c?0:c,s=n.rotate,l=[],v=0;v<o;v++){var h=t([v*a+a/2-s,i],[v*a,r]),f=t([v*a+a/2-s,i],[(v+1)*a,r]);l.push(h,f)}var y=l.map((function(n){var o=n[0],i=n[1];return[o+d,i+u]}));return y}function a(n){return 2*o/n}function t(n,o){var i=n[0],r=n[1],a=o[0],t=o[1],e=r*Math.cos(i),d=t*Math.cos(a);return[r*Math.sin(i)+t*Math.sin(a),e+d]}return n.roundedPolygonByCircumRadius=function(n){var t=n.circumRadius,e=n.sideCount,d=void 0===e?3:e,c=n.borderRadius,u=void 0===c?0:c,s=n.cx,l=void 0===s?0:s,v=n.cy,h=void 0===v?0:v,f=n.rotate,y=void 0===f?0:f,g=a(d);return i({allPoints:r({sideCount:d,radiusOfInnerPolygon:t-u/Math.cos(g/2),borderRadius:u,alpha:g,rotate:y=y*o/180,cx:l,cy:h}),borderRadius:u,alpha:g})},n.roundedPolygonBySideLength=function(n){var t=n.sideLength,e=n.sideCount,d=void 0===e?3:e,c=n.borderRadius,u=void 0===c?0:c,s=n.cx,l=void 0===s?0:s,v=n.cy,h=void 0===v?0:v,f=n.rotate,y=void 0===f?0:f,g=function(n){var o=n.sideLength,i=a(n.sideCount);return{circumcircleRadius:o/(2*Math.sin(i/2)),angleIntendedBySide:i}}({sideLength:t,sideCount:d}),R=g.circumcircleRadius,P=g.angleIntendedBySide;return i({allPoints:r({sideCount:d,radiusOfInnerPolygon:R-u/Math.cos(P/2),borderRadius:u,alpha:P,rotate:y=y*o/180,cx:l,cy:h}),borderRadius:u,alpha:P})},n}({});