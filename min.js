self.curvedPolygon=function(n){"use strict";var o=Math.PI;function i(n){var o=n.allPoints,i=n.borderRadius,r=n.alpha;return o.length?"M ".concat(o[0].join(" ")," ").concat(o.slice(1).map((function(n,o){return o%2==0?"A ".concat(i," ").concat(i," ").concat(r," 0 0 ").concat(n.join(" ")):"L ".concat(n.join(" "))})).join(" ")," z"):""}function r(n){for(var o=n.sideCount,i=n.radiusOfInnerPolygon,r=n.borderRadius,a=n.alpha,t=n.cx,e=void 0===t?0:t,c=n.cy,u=void 0===c?0:c,s=[],l=0;l<o;l++){var v=d([l*a+a/2,i],[l*a,r]),h=d([l*a+a/2,i],[(l+1)*a,r]);s.push(v,h)}var f=s.map((function(n){var o=n[0],i=n[1];return[o+e,i+u]}));return f}function a(n){return 2*o/n}function d(n,o){var i=n[0],r=n[1],a=o[0],d=o[1],t=r*Math.cos(i),e=d*Math.cos(a);return[r*Math.sin(i)+d*Math.sin(a),t+e]}return n.roundedPolygonByCircumRadius=function(n){var o=n.circumRadius,d=n.sideCount,t=void 0===d?3:d,e=n.borderRadius,c=void 0===e?0:e,u=n.cx,s=void 0===u?0:u,l=n.cy,v=void 0===l?0:l,h=a(t);return i({allPoints:r({sideCount:t,radiusOfInnerPolygon:o-c/Math.cos(h/2),borderRadius:c,alpha:h,cx:s,cy:v}),borderRadius:c,alpha:h})},n.roundedPolygonBySideLength=function(n){var o=n.sideLength,d=n.sideCount,t=void 0===d?3:d,e=n.borderRadius,c=void 0===e?0:e,u=n.cx,s=void 0===u?0:u,l=n.cy,v=void 0===l?0:l,h=function(n){var o=n.sideLength,i=a(n.sideCount);return{circumcircleRadius:o/(2*Math.sin(i/2)),angleIntendedBySide:i}}({sideLength:o,sideCount:t}),f=h.circumcircleRadius,y=h.angleIntendedBySide;return i({allPoints:r({sideCount:t,radiusOfInnerPolygon:f-c/Math.cos(y/2),borderRadius:c,alpha:y,cx:s,cy:v}),borderRadius:c,alpha:y})},n}({});