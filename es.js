self.curvedPolygon=function(n){"use strict";var o=Math.PI;function r(n){var o=n.allPoints,r=n.borderRadius,i=n.alpha;return o.length?"M ".concat(o[0].join(" ")," ").concat(o.slice(1).map((function(n,o){return o%2==0?"A ".concat(r," ").concat(r," ").concat(i," 0 0 ").concat(n.join(" ")):"L ".concat(n.join(" "))})).join(" ")," z"):""}function i(n){for(var o=n.sideCount,r=n.radiusOfInnerPolygon,i=n.borderRadius,a=n.alpha,d=n.cx,e=void 0===d?0:d,c=n.cy,u=void 0===c?0:c,s=n.rotate,l=[],v=0;v<o;v++){var h=t([v*a+a/2-s,r],[v*a,i]),y=t([v*a+a/2-s,r],[(v+1)*a,i]);l.push(h,y)}var f=l.map((function(n){var o=n[0],r=n[1];return[o+e,r+u]}));return f}function a(n){return 2*o/n}function t(n,o){var r=n[0],i=n[1],a=o[0],t=o[1],d=i*Math.cos(r),e=t*Math.cos(a);return[i*Math.sin(r)+t*Math.sin(a),d+e]}return n.roundedPolygonByCircumRadius=function(n){var t=n.circumRadius,d=n.sideCount,e=void 0===d?3:d,c=n.borderRadius,u=void 0===c?0:c,s=n.cx,l=void 0===s?0:s,v=n.cy,h=void 0===v?0:v,y=n.rotate,f=void 0===y?0:y,g=a(e);return r({allPoints:i({sideCount:e,radiusOfInnerPolygon:t-u/Math.cos(g/2),borderRadius:u,alpha:g,rotate:f=f*o/180,cx:l,cy:h}),borderRadius:u,alpha:g})},n.roundedPolygonBySideLength=function(n){var t=n.sideLength,d=n.sideCount,e=void 0===d?3:d,c=n.borderRadius,u=void 0===c?0:c,s=n.cx,l=void 0===s?0:s,v=n.cy,h=void 0===v?0:v,y=n.rotate,f=void 0===y?0:y,g=function(n){var o=n.sideLength,r=a(n.sideCount);return{circumcircleRadius:o/(2*Math.sin(r/2)),angleIntendedBySide:r}}({sideLength:t,sideCount:e}),R=g.circumcircleRadius,P=g.angleIntendedBySide;return r({allPoints:i({sideCount:e,radiusOfInnerPolygon:R-u/Math.cos(P/2),borderRadius:u,alpha:P,rotate:f=f*o/180,cx:l,cy:h}),borderRadius:u,alpha:P})},n}({});
